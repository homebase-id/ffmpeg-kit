name: ios build scripts

on:
  workflow_dispatch:
  push:
    branches:
      - development
      - main
    paths:
      - '.github/workflows/ios-build-scripts.yml'
      - 'apple/**'
      - '!apple/README.md'
      - 'scripts/**'
      - 'tools/**'
      - 'apple.sh'
      - 'ios.sh'
  pull_request:
    branches:
      - development
      - main
    paths:
      - '.github/workflows/ios-build-scripts.yml'
      - 'apple/**'
      - '!apple/README.md'
      - 'scripts/**'
      - 'tools/**'
      - 'apple.sh'
      - 'ios.sh'

jobs:
  build-main-on-macos-latest:
    name: ios main on latest
    runs-on: macos-15
    strategy:
      matrix:
        xcode: [ '16.0', '16.3' ]
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - name: prerequisites
        run: brew install autoconf automake libtool pkg-config curl git cmake nasm
      - name: set up xcode
        run: echo "export DEVELOPER_DIR=/Applications/Xcode_${{ matrix.xcode }}.app/Contents/Developer" > ~/.xcode.for.ffmpeg.kit.sh
      - name: run the build script
        run: ./ios.sh --xcframework --enable-ios-audiotoolbox --enable-ios-avfoundation --enable-ios-bzip2 --enable-ios-libiconv --enable-ios-videotoolbox --enable-ios-zlib
      - run: ls -laR
      - name: print build logs
        if: ${{ always() }}
        run: cat build.log
      - name: print ffbuild logs
        if: ${{ failure() }}
        run: '[[ -f ./src/ffmpeg/ffbuild/config.log ]] && tail -50 ./src/ffmpeg/ffbuild/config.log'
  build-main-on-macos-ventura:
    name: ios main on ventura
    runs-on: macos-13
    strategy:
      matrix:
        xcode: [ '15.4' ]
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - name: prerequisites
        run: brew install autoconf automake libtool pkg-config curl git cmake nasm
      - name: set up xcode
        run: echo "export DEVELOPER_DIR=/Applications/Xcode_${{ matrix.xcode }}.app/Contents/Developer" > ~/.xcode.for.ffmpeg.kit.sh
      - name: run the build script
        run: ./ios.sh --xcframework --enable-ios-audiotoolbox --enable-ios-avfoundation --enable-ios-bzip2 --enable-ios-libiconv --enable-ios-videotoolbox --enable-ios-zlib
      - run: ls -laR
      - name: print build logs
        if: ${{ always() }}
        run: cat build.log
      - name: print ffbuild logs
        if: ${{ failure() }}
        run: '[[ -f ./src/ffmpeg/ffbuild/config.log ]] && tail -50 ./src/ffmpeg/ffbuild/config.log'
 